(*#############################################################################
#
#  https://github.com/NetASM/NetASM-python
#
#  File:
#        netasm_dsl.bnf
#
#  Project:
#        NetASM: A Network Assembly Language for Programmable Dataplanes
#
#  Author:
#        Muhammad Shahbaz
#
#  Copyright notice:
#        Copyright (C) 2014 Princeton University
#      Network Operations and Internet Security Lab
#
#  Licence:
#        This file is a part of the NetASM development base package.
#
#        This file is free code: you can redistribute it and/or modify it under
#        the terms of the GNU Lesser General Public License version 2.1 as
#        published by the Free Software Foundation.
#
#        This package is distributed in the hope that it will be useful, but
#        WITHOUT ANY WARRANTY; without even the implied warranty of
#        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#        Lesser General Public License for more details.
#
#        You should have received a copy of the GNU Lesser General Public
#        License along with the NetASM source package.  If not, see
#        http://www.gnu.org/licenses/.
*)

(* NetASM Domain-Specific Language *)

<number> ::= [0-9]+

<decimal_number> ::= '[dD][-+]?[0-9]+

<hexadecimal_number> ::= '[hH][0-9a-fA-F]+

<value_number> ::= <decimal_number>
               ||= <hexadecimal_number>

<value> ::= <number> <value_number>

<identifier> ::= [a-zA-Z_][0-9a-zA-Z_]*

<string> = "[^"]*"

<size> ::= <value>

<field> ::= <identifier>

<fields> ::= <field>*

<mask> ::= <value>

<label> ::= <string>

<reason> ::= <string> <string>

<operator> ::= "Add"
           ||= "Sub"
           ||= "Mul"
           ||= "Div"
           ||= "And"
           ||= "Or"
           ||= "Xor"

<comparator> ::= "Eq"
             ||= "Neq"
             ||= "Lt"
             ||= "Gt"
             ||= "Le"
             ||= "Ge"

<operand__> ::= <field>

<operands__> ::= <operand__>+

<operand_> ::= <operand__>
           ||= <value>

<operands_> ::= <operand_>+

<operand_mask_> ::= "(" <operand_> <mask> ")"

<operands_masks_> ::= <operand_mask_>+

<operand> ::= <operand_>
          ||= <location> "::"[lL]

<location> ::= <operand_>

<table_id> ::= <identifier>

<match_type> ::= "Binary"
             ||= "Ternary"

<match_field> ::= "(" <field> <size> <match_type> ")"

<simple_field> ::= "(" <field> <size> ")"

<table_fields> ::= (<match_field>+
               ||= <simple_field>+)

<table_type> ::= "CAM"
             ||= "RAM"
             ||= "HASH"

<table> ::= "(" "[" <table_fields> "]" <size> <table_type> ")"

<table_decl> ::= <table_id> "=" <table>

<table_decls> ::= <table_decl>*

<decls> ::= ".decls" "(" <table_decls> ")"

<instruction> ::= "ID"
              ||= "DRP" <reason>?
              ||= "CTR" <reason>?
              ||= "ADD" <operand__> <size>
              ||= "RMV" <operand__>
              ||= "LD" <operand__> <operand>
              ||= "ST" <location> <operand_>
              ||= "OP" <operand__> <operand_> <operator> <operand_>
              ||= "PUSH" <location> <operand_>
              ||= "POP" <operand__> <location>
              ||= "BR" <operand_> <comparator> <operand_> <label>
              ||= "JMP" <label>
              ||= "LBL" <label>
              ||= "LDt" "[" <operands__> "]" <table_id> <operand_>
              ||= "STt" <table_id> <operand_> "[" (<operands_> | <operands_masks_>) "]"
              ||= "INCt" <table_id> <operand_>
              ||= "LKt" <operand__> <table_id> "[" <operands_> "]"
              ||= "CRC" <operand__> "[" <operands_> "]"
              ||= "HSH" <operand__> "[" <operands_> "]"
              ||= "HLT"
              ||= "CNC" "(" <codes> ")"
              ||= "ATM" "(" <code> ")"
              ||= "SEQ" "(" <code> ")"

<instructions> ::= <instruction>+

<code_fields> ::= ".fields" "(" <fields> ")"

<code_instructions> ::= ".instructions" "(" <instructions> ")"

<code> ::= ".code" "(" <code_fields>? <code_instructions> ")"

<codes> ::= <code>+

<policy> :: <decls>? <code>
